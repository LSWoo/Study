        // 스택과 큐는 선형 자료구조 이다. ( 순환 버퍼를 이용하여 구현되었다.)

        // [1] [2] [3] [4]   ->    [주차장 입구]S
		[[	스택	]]
           LIFO (후입선출 Last in First Out) 순서 : 1 2 3 4 
        // EX) 팝업창 종료   
        // Stack<int> stack = new Stack<int>();     IN : a b c d
        // stack.Push(value);                       OUT : d c b 
        // a = stack.Pop(); 제일 마지막에 들어온 Index 의 value 를 a 에 넣어준후 index 는 1 이 줄어든다.
        // Pop 을 사용할때 Index 가 0 이 아닌지 꼭 확인해야한다.
        // b = stack.Peek(); 제일 마지막에 들어온 Index 의 value 를 b 에 넣지만 index 는 줄어들지않는다.

		[[	큐	]]
         	FIFO (선입선출 First int First Out) 먼저 들어온게 먼저 나간다.
             IN : a b c d
	OUT : a b c d   
	(( 인터페이스 ))
            queue.Enqueue                      
            queue.Dequeue                       
            queue.Peek

		[[ 	PriorityQueue (우선 순위 큐)		]]

	Priority : 우선 순위 
	Queue 와 차이점 : Queue 는 선입선출 개념으로 먼저 들어온 애가 먼저 나가지만 PriorityQueue 는 우선순위가 높은 순서대로 나간다.
		




