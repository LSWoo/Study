
					[[	힙 트리 이론	]]

1. 부모노드가 자식노드보다 항상 커야한다.
2. 부모 밑의 양쪽 자식은 둘중 어디가 커도 상관없다.
3. 항상 왼쪽부터 먼저 채워진다. (구조적인 제약)
4. 마지막 레벨을 제외한 나머지 레벨의 노드는 꽉 차있어야한다. (구조적인 제약)
5. 노드의 개수를 알면 트리의 구조를 확정할 수 있다. (장점 : 원하는 정보를 쉽게 찾을수있다.)

             	(( 힙 트리 공식))
	[[	1. 원하는 노드 찾기	]]
	i 번 노드의 왼쪽 자식은 (2 * i) + 1 번
	i 번 노드의 왼쪽 자식은 (2 * i) + 2 번
	i 번 노드의 부모는 (i * -1) / 2 번

	[[	2. 값 추가	]]

1) 우선 트리 구조를 먼저 맞춰준다. (왼쪽부터 채운다)
2) New를 Parants와 비교해 New가 크다면 Parants와 New의 위치를 바꾼다. (New 가 Parants 보다 작을때까지 반복, 이론 1번)

	[[ 	3. 최대값 꺼내기		]]
1. 최댓값 root (0번 인덱스)에 있는 값을 꺼낸다.
2. 제일 마지막에 위치한 값(14)을 root 로 옮긴다.
3. root(14) 와 자식 두개중 큰값(35)와 비교해 큰값을 root(35) 로 14는 자식으로
   또 14와 자식 두개중 큰값과 비교해 큰값은 부모로 작은값은 자식으로를 반복한다. 
 




